# Configuration file

machines {

    petrified_fuel_generator {
        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    enchantment_refiner {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 400]
        I:energyForWork=400

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 10]
        I:energyRate=10

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    enchantment_extractor {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 5000]
        I:energyForWork=5000

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 100]
        I:energyRate=100

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    enchantment_aplicator {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 5000]
        I:energyForWork=5000

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 100]
        I:energyRate=100

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    mob_relocator {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 1000]
        I:energyForWork=1000

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 40]
        I:energyRate=40

        # Mob essence multiplier based on the mob health. Essence mb = mobHealth*essenceMultiplier [range: 0.0 ~ 2.14748365E9, default: 1.0]
        S:essenceMultiplier=1.0

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    potion_enervator {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 5000]
        I:energyForWork=5000

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 40]
        I:energyRate=40

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    animal_independence_selector {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 400]
        I:energyForWork=400

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 20]
        I:energyRate=20

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    animal_stock_increaser {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 400]
        I:energyForWork=400

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 20]
        I:energyRate=20

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    crop_sower {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 400]
        I:energyForWork=400

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 40]
        I:energyRate=40

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    crop_enrich_material_injector {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 400]
        I:energyForWork=400

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 40]
        I:energyRate=40

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    crop_recolector {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 400]
        I:energyForWork=400

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 40]
        I:energyRate=10

        # How much sludge is produced when the machine does an operation [range: 1 ~ 8000, default: 20]
        I:sludgeOperation=20

        # Amount of operations done when chopping a tree [range: 1 ~ 64, default: 10]
        I:treeOperations=10

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    black_hole_unit {
        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    water_condensator {
        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    water_resources_collector {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 5000]
        I:energyForWork=5000

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 80]
        I:energyRate=80

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    animal_resource_harvester {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 400]
        I:energyForWork=400

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 20]
        I:energyRate=20

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    mob_slaughter_factory {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 1000]
        I:energyForWork=1000

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 40]
        I:energyRate=40

        # Mob health multiplier, mobHealth * meatValue = meat mb produced [range: 1.0 ~ 2.14748365E9, default: 5.0]
        S:meatValue=5.0

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    mob_duplicator {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 5000]
        I:energyForWork=5000

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 80]
        I:energyRate=80

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    block_destroyer {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 100]
        I:energyForWork=100

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 20]
        I:energyRate=20

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    block_placer {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 100]
        I:energyForWork=100

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 20]
        I:energyRate=20

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    tree_fluid_extractor {
        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    latex_processing_unit {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 200]
        I:energyForWork=200

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 5]
        I:energyRate=5

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    sewage_composter_solidifier {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 1000]
        I:energyForWork=1000

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 10]
        I:energyRate=10

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    animal_byproduct_recolector {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 40]
        I:energyForWork=40

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 2]
        I:energyRate=2

        # Max sludge produced in an operation [range: 1 ~ 2147483647, default: 150]
        I:maxSludgeOperation=150

        # Sewage produced by an adult animal [range: 1 ~ 2147483647, default: 15]
        I:sewageAdult=15

        # Sewage produced by a baby animal [range: 1 ~ 2147483647, default: 5]
        I:sewageBaby=5

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    sludge_refiner {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 200]
        I:energyForWork=200

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 10]
        I:energyRate=10

        # List of posible sludge drops changes. Format: 'id metadata weight' [default: [minecraft:clay_ball 0 4], [minecraft:clay 0 1], [minecraft:dirt 0 4], [minecraft:gravel 0 4], [minecraft:mycelium 0 4], [minecraft:dirt 2 1], [minecraft:sand 1 4], [minecraft:sand 0 4], [minecraft:soul_sand 0 4]]
        S:sludgeDrops <
            minecraft:clay_ball 0 4
            minecraft:clay 0 1
            minecraft:dirt 0 4
            minecraft:gravel 0 4
            minecraft:mycelium 0 4
            minecraft:dirt 2 1
            minecraft:sand 1 4
            minecraft:sand 0 4
            minecraft:soul_sand 0 4
         >

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    mob_detector {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 100]
        I:energyForWork=100

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 10]
        I:energyRate=10

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    lava_fabricator {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 200000]
        I:energyForWork=200000

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 200000]
        I:energyRate=200000

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    bioreactor {
        # It can accept oreDictionary entries and item ids [default: [minecraft:wheat_seeds], [minecraft:pumpkin_seeds], [minecraft:melon_seeds], [minecraft:beetroot_seeds], [treeSapling], [minecraft:carrot], [minecraft:potato], [minecraft:nether_wart], [minecraft:brown_mushroom], [minecraft:red_mushroom], [dye], [minecraft:chorus_flower]]
        S:acceptedItems <
            minecraft:wheat_seeds
            minecraft:pumpkin_seeds
            minecraft:melon_seeds
            minecraft:beetroot_seeds
            treeSapling
            minecraft:carrot
            minecraft:potato
            minecraft:nether_wart
            minecraft:brown_mushroom
            minecraft:red_mushroom
            dye
            minecraft:chorus_flower
         >

        # Base biofuel amount in mb [range: 1 ~ 4000, default: 80]
        I:baseBiofuel=80

        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 2000]
        I:energyForWork=2000

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 10]
        I:energyRate=10

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    biofuel_generator {
        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    laser_base {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 100000]
        I:energyForWork=100000

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 100]
        I:energyRate=100

        # How much weight each lense increases to the ore [range: 1 ~ 2147483647, default: 5]
        I:lenseChanceIncrease=5

        # List of ores, format 'lensMetada itemID/oredictEntry itemMeta weight' [default: [4 oreGold 0 6], [12 oreIron 0 10], [15 oreCoal 0 12], [11 oreLapis 0 8], [3 oreDiamond 0 4], [14 oreRedstone 0 6], [0 oreQuartz 0 4], [5 oreEmerald 0 2], [13 oreUranium 0 3], [4 oreSulfur 0 8], [10 oreGalena 0 6], [0 oreIridium 0 2], [14 oreRuby 0 7], [11 oreSapphire 0 7], [12 oreBauxite 0 5], [12 orePyrite 0 5], [14 oreCinnabar 0 8], [12 oreSphalerite 0 4], [15 oreTungsten 0 3], [0 oreSheldonite 0 1], [3 orePlatinum 0 2], [13 orePeridot 0 7], [11 oreSoladite 0 4], [14 oreTetrahedrite 0 4], [8 oreTin 0 8], [10 oreLead 0 5], [7 oreSilver 0 5], [1 oreCopper 0 10]]
        S:ores <
            0 oreCertusQuartz 0 5
            0 oreCertusQuartzCharged 0 3
            0 oreIridium 0 2
            0 oreQuartz 0 4
            0 oreSheldonite 0 1
            1 oreArdite 0 3
            1 oreCopper 0 10
            3 oreApatite 0 8
            3 oreDiamond 0 4
            3 oreMithril 0 4
            3 orePlatinum 0 2
            4 oreFluidGlowstone 0 6
            4 oreGold 0 6
            4 oreNickel 0 5
            4 oreSulfur 0 8
            5 oreEmerald 0 2
            7 oreSilicon 0 7
            7 oreSilver 0 5
            7 oreThorium 0 2
            8 oreTin 0 8
            9 oreFluidEnder 0 3
            10 oreGalena 0 6
            10 oreLead 0 5
            11 oreCobalt 0 3
            11 oreLapis 0 8
            11 oreSapphire 0 7
            11 oreSoladite 0 4
            12 oreBauxite 0 5
            12 oreIron 0 10
            12 orePyrite 0 5
            12 oreSphalerite 0 4
            13 orePeridot 0 7
            13 oreUranium 0 3
            14 oreCinnabar 0 8
            14 oreFluidRedstone 0 3
            14 oreRedstone 0 6
            14 oreRuby 0 7
            14 oreTetrahedrite 0 4
            15 oreCoal 0 12
            15 oreFluidCrudeOilSand 0 5
            15 oreFluidCrudeOilShale 0 5
            15 oreTungsten 0 3
         >

        # Machine can perform a work action [default: false]
        B:workDisabled=false

        # Amount of work needed to produce an ore [range: 1 ~ 2147483647, default: 100]
        I:workNeeded=100
    }

    laser_drill {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 3000]
        I:energyForWork=3000

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 100]
        I:energyRate=100

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    ore_processor {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 1000]
        I:energyForWork=1000

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 40]
        I:energyRate=40

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    black_hole_controller {
        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    dye_mixer {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 100]
        I:energyForWork=100

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 10]
        I:energyRate=10

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    enchantment_invoker {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 4000]
        I:energyForWork=4000

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 80]
        I:energyRate=80

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

    spores_recreator {
        # How much energy needs a machine to work [range: 1 ~ 2147483647, default: 400]
        I:energyForWork=400

        # Energy input rate of a machine [range: 1 ~ 2147483647, default: 10]
        I:energyRate=10

        # Machine can perform a work action [default: false]
        B:workDisabled=false
    }

}
